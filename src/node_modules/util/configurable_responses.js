// Copyright Titanium I.T. LLC.
"use strict";

const ensure = require("util/ensure");
const type = require("util/type");

module.exports = class ConfigurableResponses {

	static create(responses, name) {
		ensure.signature(arguments, [ type.ANY_VALID, String ]);

		return new ConfigurableResponses(responses, name);
	}

	constructor(responses, name) {
		ensure.signature(arguments, [ type.ANY_VALID, String ]);

		this._responses = responses;
		this._name = name;
	}

	next() {
		ensure.signature(arguments, []);

		const response = Array.isArray(this._responses)
			? this._responses.shift()
			: this._responses;

		if (response === undefined) throw new Error(`No more responses configured in ${this._name}`);
		return response;
	}

};